题目内容：

编写程序，将十进制点分的IP转换为32位二进制IP地址。程序要能验证输入的十进制点分ＩＰ地址的合法性。用户输入的ＩＰ不和法时，输出"data error"。



请使用模块化程序设计的思想，将功能模块编写成函数。通过指针传递参数，操作数据，返回结果。在主函数中输入IP地址，调用函数进行合法性验证和转换，在主函数中输出32位二进制IP。



输入格式:

十进制点分IP地址(英文句点)



输出格式：

32位二进制数（二进制字符串）



输入样例：

202.151.96.33



输出样例：

11001010100101110110000000100001



提示：十进制转换为二进制。对整数部分，除2取余，直到商为0。例如

13/2=6.....1(低位)

6/2=3......0

3/2=1......1

1/2=0......1

转换后的二进制数位1101


#include <iostream>
using namespace std;
void extract(char *p, int *q);//将字符串中的四个整数提取出来 
bool check(int *q);//判断IP是否合法 
void reverse(char *p);//字符串反转 
void trans(char *q, int a);//将整数转换为二进制数字符串形式 
int main()
{
	char str[16],  str_[9];
	int A[4], i;
	cin>>str;
	extract(str, A);
	if (check(A)) 
	{
		for (i=0;i<4;i++)
		{
			trans(str_, A[i]);
			cout<<str_;
		}
		cout<<endl;
	}
	else cout<<"data error"<<endl;
	return 0;
}
void extract(char *p, int *q)
{
	int *a=q, num, sum;
	for (int i=0;i<4;i++)
	{
		//每次都把字符转换为对应的整数，然后通过求和把单个整数串起来 
		sum=0;
		while (*p!='.'&&*p!='\0')
		{
			if (*p=='0') num = 0;
			else if (*p=='1') num = 1;
			else if (*p=='2') num = 2;
			else if (*p=='3') num = 3;
			else if (*p=='4') num = 4;
			else if (*p=='5') num = 5;
			else if (*p=='6') num = 6;
			else if (*p=='7') num = 7;
			else if (*p=='8') num = 8;
			else if (*p=='9') num = 9;
			sum = sum*10+num;
			p++;
		}
		p++;
		*a = sum;
		a++;
	}
}
bool check(int *q)
{
	int *a=q;
	bool flag=true;
	for (int i=0;i<4;i++)
	{
		//整数应位于0-255之间，不然数据错误 
		if (*a<0||*a>255) flag = false;
		a++;
	}
	return flag;
}
void reverse(char *p)
{
	//通过手指针和尾指针实现字符串反转 
	char *q, *r, tmp;
	q = p;
	r = p+7;
	while (q<r)
	{
		tmp = *q;
		*q = *r;
		*r = tmp;
		q++;
		r--;
	}
}
void trans(char *q, int a)
{
	int b, count=1;
	char *p=q;
	//通过循环实现整数转换为二进制字符串 
	while (a>1)
	{
		b = a%2;
		a = a/2;
		if (b==1) *p='1';
		else *p='0';
		p++;
		count++;
	}
	if (a==0) *p='0';
	else *p='1';
	//不够8位的补够8位，然后反转过来 
	while (count<8) 
	{	
		p++;
		*p = '0';
		count++;
	}
	p++;
	*p='\0';
	reverse(q);
}
